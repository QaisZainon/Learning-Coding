die = pd.DataFrame([1,2,3,4,5,6]) #has six values
sum_of_dice = die.sample(2,replace=True).sum().loc[0] #.sample() randomises a value, this one twice because of the argument
print('Sum of dice is ', sum_of_dice)

trial = 50
result = [die.sample(2, replace = True).sum().loc[0] for i in range(trial)] # rolls two dice for 50 times
result[:10]

freq = pd.DataFrame(results)[0].value_counts() #counts values of a string?
sort_freq = freq.sort_index() #sort sort index 
sort_freq

#can plot frequency into a bar chart
sort_freq.plot(kind='bar', color='blue')
#usually want relative frequency, just divide by total

#can be achieved using a simple distribution table if the trial is infinite
#Mean and Variance are two characteristics of the distribution of ranodm variables
Mean = (X_distri.index*X_distri['Prob']).sum()
Var = (((X_distri.index-Mean)**2)*X_distri['Prob']).sum()
print(Mean, Var)

#yo I kinda gave up, so just read the .py files